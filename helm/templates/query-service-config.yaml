apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.queryServiceConfig.name }}
  labels:
    release: {{ .Release.Name }}
data:
  application.conf: |-
    service.config = {
      tenantColumnName = "{{ .Values.queryServiceConfig.data.tenantColumnName }}"
      attribute.client = {
        host = {{ .Values.queryServiceConfig.data.attributeClient.host }}
        port = {{ .Values.queryServiceConfig.data.attributeClient.port }}
      }
      validation.limit = {
        min = {{ .Values.queryServiceConfig.data.validation.limit.min }}
        max = {{ .Values.queryServiceConfig.data.validation.limit.max }}
        mode = {{ .Values.queryServiceConfig.data.validation.limit.mode }}
      }
      clients = [
        {{- if eq .Values.queryServiceConfig.clientType "pinot" }}
        {
          type = zookeeper
          connectionString = "{{ .Values.queryServiceConfig.data.zookeeperConnectionString }}"
        }
        {{- end }}
        {{- if eq .Values.queryServiceConfig.clientType "postgres" }}
        {
          type = postgres
          connectionString = "{{ .Values.queryServiceConfig.data.postgresConnectionString }}"
          user = "{{ .Values.queryServiceConfig.data.postgresUser }}"
          password = ${? {{ .Values.queryServiceConfig.data.postgresPasswordEnvVariable }} }
          maxConnections = "{{ .Values.queryServiceConfig.data.postgresMaxConnections }}"
          maxConnectionAttempts = "{{ .Values.queryServiceConfig.data.postgresMaxConnectionAttempts }}"
          connectionRetryBackoff = "{{ .Values.queryServiceConfig.data.postgresConnectionRetryBackoff }}"
        }
        {{- end }}
        {{- if eq .Values.queryServiceConfig.clientType "trino" }}
        {
          type = trino
          connectionString = "{{ .Values.queryServiceConfig.data.trinoConnectionString }}"
          user = "{{ .Values.queryServiceConfig.data.trinoUser }}"
          password = ${? {{ .Values.queryServiceConfig.data.trinoPasswordEnvVariable }} }
        }
        {{- end }}
      ]
      {{- if or .Values.handlers .Values.extraHandlers .Values.postgresHandlers }}
      queryRequestHandlersConfig = [
      {{- if eq .Values.queryServiceConfig.clientType "pinot" }}
      {{- range .Values.handlers }}
        {
{{ tpl . $ | indent 10 }}
        }
      {{- end }}
      {{- range .Values.extraHandlers }}
        {
{{ tpl . $ | indent 10 }}
        }
      {{- end }}
      {{- end }}
      {{- if eq .Values.queryServiceConfig.clientType "postgres" }}
      {{- range .Values.postgresHandlers }}
        {
{{ tpl . $ | indent 10 }}
        }
      {{- end }}
      {{- end }}
      {{- if eq .Values.queryServiceConfig.clientType "trino" }}
      {{- range .Values.trinoHandlers }}
      {
{{ tpl . $ | indent 10 }}
      }
      {{- end }}
      {{- end }}
      ]
      {{- end }}
    }
