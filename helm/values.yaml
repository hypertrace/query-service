###########
# Deployment and Service
###########
replicaCount: 1
maxUnavailable: 0

chartType: application

image:
  repository: hypertrace/query-service
  pullPolicy: IfNotPresent
  tagOverride: ""

containerPort: 8090
containerHealthProbePort: 8091

service:
  name: query-service
  type: ClusterIP
  port: 8090

imagePullSecrets: {}

nodeLabels: {}

tolerations: []

affinity: {}

topologySpreadConstraints: []

securityContext: {}

javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"

livenessProbe:
  periodSeconds: 5
  failureThreshold: 3
  timeoutSeconds: 3
startupProbe:
  periodSeconds: 5
  failureThreshold: 24
  timeoutSeconds: 3

resources:
  limits:
    cpu: 2
    memory: 768Mi
  requests:
    cpu: 100m
    memory: 768Mi

deploymentLabels:
  app: query-service

podLabels:
  app: query-service

podAnnotations: {}

deploymentSelectorMatchLabels:
  app: query-service

serviceSelectorLabels:
  app: query-service

###########
# Config Maps
###########
queryServiceConfig:
  name: query-service-config
  clientType: pinot
  interactiveClientType: ""
  data:
    zookeeperConnectionString: zookeeper:2181/pinot/my-views
    postgresConnectionString: jdbc:postgresql://postgres:5432/postgres
    postgresUser: postgres
    postgresMaxConnections: 5
    postgresPasswordEnvVariable: POSTGRESQL_PASSWORD
    postgresPasswordSecretName: postgresql
    postgresqlPasswordSecretKey: password
    postgresMaxConnectionAttempts: 200
    postgresConnectionRetryBackoff: 5s
    tenantColumnName: tenant_id
    attributeClient:
      host: attribute-service
      port: 9012
    validation:
      limit:
        min: 1
        max: 10000
        mode: WARN

handlers: []

extraHandlers: []

postgresHandlers: []

trinoHandlers: []

logConfig:
  name: query-service-log-appender-config
  monitorInterval: 30
  rootLogger:
    level: INFO
  appender:
    rolling:
      enabled: false

hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
