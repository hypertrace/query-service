version = 2
name = event_attributes
commands = [
  {
    upgrade: [
      {
        type: Attribute,
        action: ADD,
        data: {
          attributes = [
            {
              fqn: Span.id,
              key: id,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Span ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Service.name,
              key: serviceName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Service Name,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.start_time_millis,
              key: startTime,
              value_kind: TYPE_INT64,
              display_name: Start Time,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.end_time_millis,
              key: endTime,
              value_kind: TYPE_INT64,
              display_name: End Time,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.span_kind,
              key: type,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Span Type,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.trace_id,
              key: traceId,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Trace ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.metrics.duration_millis,
              key: duration,
              value_kind: TYPE_INT64,
              display_name: Duration,
              unit: ms,
              scope: EVENT,
              sources: [QS],
              type: METRIC
            },
            {
              fqn: Span.attributes.parent_span_id,
              key: parentSpanId,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Parent Span ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.tags,
              key: spanTags,
              value_kind: TYPE_STRING_MAP,
              display_name: Tags,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.status_code,
              key: statusCode,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Status Code,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.display_span_name,
              key: displaySpanName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Span Name,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.space_ids,
              key: spaceIds,
              value_kind: TYPE_STRING_ARRAY,
              display_name: Space IDs,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            }
          ]
        }
      }
    ]
    rollback: [
      {
        type: Attribute,
        action: DELETE,
        data: {
          filter = {
            scope: [EVENT]
          }
        }
      }
    ]
  }
]
