version = 3
name = event_attributes
commands = [
  {
    upgrade: [
      {
        type: Attribute,
        action: DELETE,
        data: {
          filter = {
            scope: [EVENT]
            key: [upstreamService, downstreamServices]
          }
        }
      },
      {
        type: Attribute,
        action: ADD,
        data: {
          attributes = [
            {
              fqn: Service.id,
              key: serviceId,
              value_kind: TYPE_STRING,
              display_name: Service ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: API.id,
              key: apiId,
              value_kind: TYPE_STRING,
              display_name: Endpoint ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: API.name,
              key: apiName,
              value_kind: TYPE_STRING,
              display_name: Endpoint Name,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Api.Trace.id,
              key: apiTraceId,
              value_kind: TYPE_STRING,
              display_name: Endpoint Trace ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.metrics.error_count,
              key: errorCount,
              value_kind: TYPE_INT64,
              display_name: Error Count,
              scope: EVENT,
              sources: [QS],
              type: METRIC
            },
            {
              fqn: Span.metrics.exception_count,
              key: exceptionCount,
              value_kind: TYPE_INT64,
              display_name: Exception Count,
              scope: EVENT,
              sources: [QS],
              type: METRIC
            },
            {
              fqn: Span.attributes.request_params,
              key: spanRequestParams,
              value_kind: TYPE_STRING_MAP,
              display_name: Request Params,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.request_method,
              key: spanRequestMethod,
              value_kind: TYPE_STRING,
              display_name: HTTP Method,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.protocol_name,
              key: protocolName,
              value_kind: TYPE_STRING,
              display_name: Protocol,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.display_entity_name,
              key: displayEntityName,
              value_kind: TYPE_STRING,
              display_name: Entity Name,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.request_url,
              key: spanRequestUrl,
              value_kind: TYPE_STRING,
              display_name: URL,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
          ]
        }
      }
    ]
    rollback: [
      {
        type: Attribute,
        action: DELETE,
        data: {
          filter = {
            scope: [EVENT]
          }
        }
      }
    ]
  }
]